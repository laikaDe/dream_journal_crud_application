Interface:
    - User can view journal form
    - User can view old journal entries 
    - User can write a new journal 
    - User can edit a journal 
    - User can delete a journal
    -*User can customize interface 

User class: 
    x attributes => name, password 
    - user signs up/logs in
    - has many journals 

User controller and views:
    x '/user/signup' => renders sign up form 
    x '/users/signup' => processes sign up form, creates user
    - '/users/login' => renders login form 
    - '/users/signup' => processes sign up form, creates user
    - '/users/login' => processes login form
    - sessions ? 
    - user can view their journals, 'users/:id/journal'
    - '/users/menu' => processes interface menu color changes 

Journals class:
    x attributes => title, date, entry, mood, lucid?
    x journals belong to user 

Journals controller and views:
    x '/journals/new' => renders a new journal form 
    x '/journals' => submits journal entry
    x '/journals' => renders all journals 
    x '/journals/:id' => renders one journal entry instance 
    x '/journals/:id/edit => renders update form for a journal entry instance
    x '/journals/:id' => updates instance 
    x '/journals/:id/:delete' => deletes instance

Process: 

    x set up classes 
    x set up database 
    x users controller 
    x journals controller 


Sessions:

1. Enable sessions.
2. Utilize sessions hash in the methods that persist user data into application. 


Authentication: 
1. bcrypt gem
2. user model, has_secure_password
3. change users table, password => password_digest

user is logged in?
- redirect to homepage, if logged in 
- cant see the signup or login form if logged in 

helper methods 
- application ontroller => methods available to controller 
- app/helpers => helper methods used in your views
